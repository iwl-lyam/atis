name: Build and Release

on:
  push:
    branches:
      - '**'

jobs:
  build:
    if: startsWith(github.event.head_commit.message, '[rebuild]')
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile main.py
        shell: bash

      - name: Rename artifact
        run: |
          mkdir build-output
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            mv dist/main build-output/atis_gen-linux
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            mv dist/main build-output/atis_gen-macos
          else
            mv dist/main.exe build-output/atis_gen-windows.exe
          fi
        shell: bash

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: build-output/*

  release:
    if: startsWith(github.event.head_commit.message, '[rebuild]')
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Gather files for release
        run: |
          mkdir release-files
          mv artifacts/*/* release-files/
          cp audio.zip release-files/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.sha }}
          name: Release ${{ github.sha }}
          draft: true
          files: release-files/*
